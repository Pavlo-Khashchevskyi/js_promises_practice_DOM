{"version":3,"sources":["scripts/main.js"],"names":["body","document","createDivResolved","massage","insertAdjacentHTML","createDivReject","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","then","secondPromise","e","preventDefault","thirdPromise","all"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASD,KAEtB,SAASE,EAAkBC,GACzBH,EAAKI,mBAAmB,YAIrBD,iEAAAA,OAAAA,EAJH,eAQF,SAASE,EAAgBF,GACvBH,EAAKI,mBAAmB,aAIrBD,iEAAAA,OAAAA,EAJH,eAQF,IAAMG,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCT,EAAKU,iBAAiB,QAAS,WAC7BF,EAAQ,gCAGVG,WAAW,WAETF,EAAO,+BACN,OAGLH,EAAaM,KAAKV,EAAmBG,GAErC,IAAMQ,EAAgB,IAAIN,QAAQ,SAACC,EAASC,GAC1CT,EAAKU,iBAAiB,QAAS,WAC7BF,EAAQ,iCAGVR,EAAKU,iBAAiB,cAAe,SAACI,GACpCA,EAAEC,iBACFP,EAAQ,mCAIZK,EAAcD,KAAKV,GAEnB,IAAMc,EAAeT,QAAQU,IAAI,CAC/B,IAAIV,QAAQ,SAACC,GACXR,EAAKU,iBAAiB,QAAS,WAC7BF,QAIJ,IAAID,QAAQ,SAACC,GACXR,EAAKU,iBAAiB,cAAe,WACnCF,UAGHI,KAAK,WAAM,MAAA,+BAEdI,EAAaJ,KAAKV","file":"main.69dcbfe6.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst body = document.body;\n\nfunction createDivResolved(massage) {\n  body.insertAdjacentHTML('beforeend', `\n  <div\n    data-qa=\"notification\"\n    class=\"success\"\n  >${massage}</div>\n  `);\n};\n\nfunction createDivReject(massage) {\n  body.insertAdjacentHTML('afterbegin', `\n  <div\n    data-qa=\"notification\"\n    class=\"warning\"\n  >${massage}</div>\n  `);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    // eslint-disable-next-line prefer-promise-reject-errors\n    reject('First promise was rejected');\n  }, 3000);\n});\n\nfirstPromise.then(createDivResolved, createDivReject);\n\nconst secondPromise = new Promise((resolve, reject) => {\n  body.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  body.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    resolve('Second promise was resolved');\n  });\n});\n\nsecondPromise.then(createDivResolved);\n\nconst thirdPromise = Promise.all([\n  new Promise((resolve) => {\n    body.addEventListener('click', () => {\n      resolve();\n    });\n  }),\n\n  new Promise((resolve) => {\n    body.addEventListener('contextmenu', () => {\n      resolve();\n    });\n  }),\n]).then(() => 'Third promise was resolved');\n\nthirdPromise.then(createDivResolved);\n"]}